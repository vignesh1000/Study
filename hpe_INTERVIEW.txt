
inputs - num, pos1, pos2

int SwapBits(int num, int pos1, int pos2)
{
	int FirstBit =  (num >> pos1) & 0x1;
	int secondBit = (num >> pos2) & 0x1;
	
	if(FirstBit != secondBit)
	{
		if(FirstBit)//swapping first bit
		{
			num |= (1 << pos2);	
		}
		else
		{
			num &= ~(1 << pos2);	
		}

		if(secondBit)//swapping second bit
		{
			num |= (1 << pos1);	
		}
		else
		{
			num &= ~(1 << pos1);	
		}
	}

	return num;
}

0x60 - 0110 0000

how are you - you are how

I2C device discover

SPI or i2c which is better

volatile keyowrd use and applications

process thread difference

mutex lock


void ReverseString(char *start, char * end)
{
	char temp;
	while(start < end)//check start is lesser than end
	{
		temp = *start;  //perform character swap using temp variable
		*start = 	*end;
		*end = temp;
		
		start++;//increment start
		end--; //decrement end
	}		
}

void StringReverse(char *ptr)//to reverse a string
{
	char *startptr = ptr;
	char *endptr = ptr;
	int length = strlen(ptr);
	char temp = 0;
	int count = 0;
	int end = length/2;

	for(count=0;count<end;count++)
	{	
		temp = endptr[length-1];
		endptr[length-1] = startptr[count];
		startptr[count] = temp;
		length--;
	}
}

void ReverseWords(char *ptr)//input sentence
{
	int i=0;
	char *backup;
	char *temp;

	//checking the input ptr is NULL or not
	if(ptr != NULL)
	{
		//taking backup of the input ptr
		backup = ptr;

		// taking a temporary backup
		temp = ptr; 

		//checking for NULL character encounter
		while(*temp)
		{
			//incrementing the pointer upto NULL
			temp++;

			//checking for white space, if white space then reverse the word alone
			if(*temp == ' ')
			{	
				//function to reverse a tring
				ReverseString(backup,temp-1);

				//updating backup pointer to point to the next word
				backup = temp+1;
			}
			//checking for NULL
			else if(*temp == '\0')
			{
				//if NULL then reverse the last word in the sentence
				ReverseString(backup,temp-1);
			}
		}

		//Reverse reversed words in a string
		ReverseString(ptr,temp-1);
	}
}
